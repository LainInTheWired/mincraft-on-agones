apiVersion: "agones.dev/v1"
kind: Fleet
# Fleet Metadata
# https://v1-26.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#objectmeta-v1-meta
metadata:
  name: fleet-test-mcserver
spec:
  # the number of GameServers to keep Ready or Allocated in this Fleet
  replicas: 1
  # defines how GameServers are organised across the cluster.
  # Options include:
  # "Packed" (default) is aimed at dynamic Kubernetes clusters, such as cloud providers, wherein we want to bin pack
  # resources
  # "Distributed" is aimed at static Kubernetes clusters, wherein we want to distribute resources across the entire
  # cluster
  scheduling: Packed
  # a GameServer template - see:
  # https://agones.dev/site/docs/reference/gameserver/ for all the options
  strategy:
    # The replacement strategy for when the GameServer template is changed. Default option is "RollingUpdate",
    # "RollingUpdate" will increment by maxSurge value on each iteration, while decrementing by maxUnavailable on each
    # iteration, until all GameServers have been switched from one version to another.
    # "Recreate" terminates all non-allocated GameServers, and starts up a new set with the new details to replace them.
    type: RollingUpdate
    # Only relevant when `type: RollingUpdate`
    rollingUpdate:
      # the amount to increment the new GameServers by. Defaults to 25%
      maxSurge: 25%
      # the amount to decrements GameServers by. Defaults to 25%
      maxUnavailable: 25%
  template:
    # GameServer metadata
    metadata:
      generateName: 'mc-server-' # Generates a unique name for GameServer and Pod
    # GameServer specification
    spec:
      container: mc-server # Minecraft server container name
      ports:
        - name: mc
          # "Dynamic" (default) the system allocates a free hostPort for the gameserver (default 7000-8000), for game clients to connect to
          portPolicy: Static

          hostPort: 7777

          # The name of the container to open the port on. Defaults to the game server container if omitted or empty.
          container: mc-server
          # the port that is being opened on the game server process
          containerPort: 25565
          # Minecraft uses TCP to connect players
          protocol: TCP
      # Health checking for the running game server
      health:
        # Number of seconds after the container has started before health check is initiated.
        initialDelaySeconds: 60
        # If the `Health()` function doesn't get called at least once every period (seconds), then
        # the game server is not healthy.
        periodSeconds: 12
        # Minimum consecutive failures for the health probe to be considered failed after having succeeded.
        failureThreshold: 5
      template:
        spec:
          containers:
            - name: mc-server
              image: itzg/minecraft-server # Minecraft Java server image
              env: # Full list of ENV variables at https://github.com/itzg/docker-minecraft-server
                - name: EULA
                  value: "TRUE"
              volumeMounts:
                - mountPath: /data # shared vol with mc-load and mc-backup
                  name: world-vol

            - name: mc-monitor
              image: saulmaldonado/agones-mc # monitor
              env:
                - name: INITIAL_DELAY
                  value: 60s
                - name: MAX_ATTEMPTS
                  value: '5'
                - name: INTERVAL
                  value: 10s
                - name: TIMEOUT
                  value: 10s
              args:
                - monitor
              imagePullPolicy: Always

            - name: mc-backup
              image: saulmaldonado/agones-mc # backup
              args:
                - backup
              env:
                - name: BUCKET_NAME
                  value: agones-minecraft-mc-worlds
                - name: BACKUP_CRON
                  value: 0 */6 * * *
                - name: INITIAL_DELAY
                  value: 60s
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name # GameServer ref for naming backup zip files
                - name: RCON_PASSWORD
                  value: minecraft # default rcon password. If provided RCON connection will be used to execute 'save-all' before a backup job.
                  # Change the rcon password when exposing RCON port outside the pod
              imagePullPolicy: Always
              volumeMounts:
                - mountPath: /data # shared vol with mc-server
                  name: world-vol

            - name: mc-fileserver # fileserver
              image: saulmaldonado/agones-mc
              args:
                - fileserver
              env:
                - name: VOLUME
                  value: /data
              imagePullPolicy: Always
              volumeMounts:
                - mountPath: /data # shared vol with mc-server
                  name: world-vol

          volumes:
            - name: world-vol # shared vol between containers. will not persist bewteen restarts
              persistentVolumeClaim:
                claimName: mincraft
